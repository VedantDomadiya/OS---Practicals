//Practical 1 
//WAP to disp Hello World 

class p1
{
	public static void main(String[] a)
	{
		System.out.println("Wellcome to JAVA World");
	}
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 2
//Write a program to find whether the number is prime or not.

import java.util.Scanner; 

class p2
{	
	public static void main(String[] a)
	{
		Scanner sc = new Scanner(System.in);
		int number = sc.nextInt();
		int x = 0;
		for (int i=2;i<=number/2;i++)
		{
			if (number%i == 0)
			{
				x++;	
			}
		}
		if(x>0)
		{
			System.out.println("NOT PRIME");
		}
		else
		{
			System.out.println("PRIME");
		}
	
	}
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 3
//Write a program to find a greater number among given three numbers using
//a) ternary operator
//b) nested if.

                                                                                      // PART A
import java.util.Scanner;
class p3
{	
	public static void main (String[] a)
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("first number :");
		int f = sc.nextInt();
		System.out.println("second number :");
		int s = sc.nextInt();
		System.out.println("third number :");
		int t = sc.nextInt();
		
		int big;
		big = f>s?(s>t?f:(f>t?f:t)):(f>t?s:(s>t)?s:t);
		System.out.println("Biggest number :"+big);


	}
}

import java.util.Scanner;

                                                                                        //PART B

class p3_b
{	
	public static void main (String[] a)
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("first number :");
		int f = sc.nextInt();
		System.out.println("second number :");
		int s = sc.nextInt();
		System.out.println("third number :");
		int t = sc.nextInt();
		
		if (f>s)
		{
			if (f>t)
			{
			  System.out.println("Biggest Number : "+f);
			}
			else 
			{
			  System.out.println("Biggest Number : "+t);
			}
		}

		else 
		{
			if (s>t)
			{
				System.out.println("Biggest Number : "+s);
			}
			else 
			{
				System.out.println("Biggest Number : "+t);
			}
		}
	}
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 4
//Write a program to print the Fibonacci series.

import java.util.Scanner;

class p4
{	
	public static void main (String[] s)
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("enter a number :");
		int n = sc.nextInt();
		int a = 0 ;
		int b,i=1;
		System.out.println(a);
		System.out.println(i);
		for (i=1;i<=n;i=b)
		{
			b = a+i;
			a = i;
			System.out.println(b+" ");
		}
			
	}
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 5
//Write a program to find the average of n numbers stored in an Array.

import java.util.Scanner;

class p5
{
    public static void main(String [] arg)
        {
            Scanner sc = new Scanner(System.in);
            int i,n;
            n = sc.nextInt();
            float [] a = new float[n];
            double total=0.0,ans=0.0;
            for (i=0;i<n;i++)
            {
                System.out.print(i+" number element");
                a[i]= sc.nextFloat();
                total +=a[i];
            }
            ans = total/n;
            System.out.println("Total of "+n+" number is : "+ans);
        }
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 6
//WAP to replace substring with other substring in the given string

import java.util.Scanner;

class p6
{
	public static void main(String []arg)
	{
		Scanner sc =new Scanner(System.in);
		String mString,sString;
		int i,j;
		System.out.println("Enter your main String :");
		mString = sc.nextLine();
		System.out.println("Enter your sub String :");
		sString = sc.nextLine();
		StringBuffer lString = new StringBuffer(mString);
		System.out.println("Enter Starting location wher you want chang string");
		i = sc.nextInt();
		System.out.println("Enter Starting location wher you want chang string");
		j = sc.nextInt();
		lString.replace(i,j,sString);
		System.out.println(lString);
	}

}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 7
//WAP that to sort given strings into alphabetical order

import java.util.Scanner;
import java.util.Arrays;

class p7
{
	public static void main(String []arg)
	{
		Scanner sc = new Scanner(System.in);	
		String mString;
		mString = sc.nextLine();
		char[] a= new char[mString.length()];

		for(int i=0;i<mString.length();i++)
		{
			a[i] = mString.charAt(i);
	
		}
		Arrays.sort(a,0,mString.length());
		String lString = new String(a);
		System.out.println(lString);
	}
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 8
//Create a String Buffer with some default string. Append any string to ith position of original string and display the modified string. Also display the reverse of modified string

import java.util.Scanner;

class p8 {

    public static void main(String[] arg) {
        Scanner sc = new Scanner(System.in);
        String nString, sString;
        int i;
        nString = sc.nextLine();
        sString = sc.nextLine();
        System.out.print("Enter location after : ");
        i = sc.nextInt();
        StringBuffer subString = new StringBuffer(nString.length() + sString.length() + 10);
        subString.append(nString, 0, i-1);
        subString.append(sString);
        subString.append(nString, i, nString.length());
        System.out.println(subString);
        subString.reverse();
        System.out.println("Reverse of String : " + subString);

    }
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 9
// a) WAP that declares a class named Person. It should have instance variables to record name, age and salary. Use new operator to create a Person object. Set and display its instance variables.

import java.util.Scanner;

class Person
{
	String name =new String();
	int age , salary;

	void data(String x,int y,int z)
	{
		name = x;
		age = y;
		salary = z;
	}
	void dispaly()
	{
		System.out.println("Name : "+name);
		System.out.println("Age : "+age);
		System.out.println("Salary : "+salary);
	}
	
}

class p9_a
{
	public static void main(String [] arg)
	{
		Person p1 = new Person();
		Scanner sc = new Scanner(System.in);
		String name = sc.nextLine();
		int age = sc.nextInt();
		int salary = sc.nextInt();
		
		p1.data(name,age,salary);
		p1.dispaly();
					
	}

}

                                                                             // b) Add a constructor to the Person class developed above.


import java.util.Scanner;

class Person
{
	String name =new String();
	int age , salary;

	Person(String x,int y,int z)
	{
		name = x;
		age = y;
		salary = z;
	}
	void dispaly()
	{
		System.out.println("Name : "+name);
		System.out.println("Age : "+age);
		System.out.println("Salary : "+salary);
	}
	
}

class p9_b
{
	public static void main(String [] arg)
	{
		Scanner sc = new Scanner(System.in);
		String name = sc.nextLine();
		int age = sc.nextInt();
		int salary = sc.nextInt();
		
		Person p1 = new Person(name,age,salary);
		p1.dispaly();
					
	}

}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 10
//The employee list for a company contains employee code, name, designation and basic pay. The employee is given HRA of 10% of the basic and DA of 45% of the basic pay. The total 
//pay of the employee is calculated as Basic pay+HRA+ DA. Write a class to define the details of the employee. Write a constructor to assign the required initial values. Add a method 
//to calculate HRA, DA and Total pay and print them out. Write another class with a main method. Create objects for three different employees and calculate the HRA, DA and total pay.

class Employee
{
	int id;
	double basicPay,hra,da,totalPay;
	String name = new String();
	String Designation = new String();

	
	Employee (int w,String x,String y,int z)
	{
		id = w;
		name = x;
		Designation = y;
		basicPay = z;	
	}
	void Calculate()
	{
		hra = 0.1*basicPay;
		da = 0.45*basicPay;
		totalPay = basicPay+hra+da;
		
		System.out.println("For Employee ID "+id);
		System.out.println("HRA : " + hra);
		System.out.println("DA : " + da);
		System.out.println("Total Pay : " + totalPay+"\n");
	}
	
}

class p10
{
	public static void main(String [] arg)
	{
		Employee emp1 = new Employee(01,"Yug","CEO",100000000);
		Employee emp2 = new Employee(02,"Jash","Manager",1000000);
		Employee emp3 = new Employee(03,"Vivak","Janiter",10000);

		
		emp1.Calculate();
		emp2.Calculate();
		emp3.Calculate();

	}

}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 11
//Write a program which defines base class Employee having three data members, namely name[30], emp_numb and gender and two methods namely input_data() and show_data(). Derive a class 
//SalariedEmployee from Employee and adds a new data member, namely salary. It also adds two member methods, namely allowance (if gender is female HRA=0.1 *salary else 0.09* salary. 
//DA= 0.05*salary) and increment (salary= salary+0.1*salary). Display the gross salary in main class. (Tip: Use super to call base class’s constructor0)

import java.util.Scanner;

class Employee
{
    char[]name = new char[30];
    int emp_numb ;
    String gender;

    Employee(char[] x,int y,String z)
    {
        name = x;
        emp_numb = y;
        gender = z;
    }

    void input_data()
    {
        Scanner sc = new Scanner(System.in);
        name = sc.nextLine().toCharArray();
        emp_numb = sc.nextInt();
        gender = sc.nextLine();
    }

    void show_data()
    {
        System.out.println(name);
        System.out.println(emp_numb);
        System.out.println(gender);

    }
}

class SalariedEmployee extends Employee
{
    double salary;
    double finel;
    double hra ;
    SalariedEmployee(char[] x,int y,String z,double a)
    {
        super(x, y, z);
        salary =a;
    }

    void allowance()
    {
        gender.toUpperCase();
        if (gender == "FEMALE" )
        {
            hra = 0.1;
        }
        else{
            hra = 0.09;
        }
        Double allow = (salary*hra)+ (0.05*salary)+salary;
        System.out.println("Allowance is : "+allow);
        finel = (salary*hra)+ (0.05*salary)+salary;
    }

    void increment()
    {
        System.out.println("your increment is : "+ salary+(salary*0.1));
        System.out.println("total salary is : " +(salary+(salary*0.1))+finel );
    }

}

class p11 {
    public static void main(String [] arg)
    {
        Scanner sc =new Scanner(System.in);
        String gender = new String();
        System.out.println("Enter your name : ");
        char[] name = new char[30];
        name  = sc.nextLine().toCharArray();
        
        System.out.println("Enter your Gender : ");
        gender = sc.nextLine();
        
        System.out.println("Enter your number : ");
        int num =sc.nextInt();


        System.out.println("Enter your Salary : ");
        double a = sc.nextDouble();

        SalariedEmployee emp1 = new SalariedEmployee(name, num, gender, a);
        emp1.show_data();
        emp1.allowance();
        emp1.increment();
    }
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 12
//WAP that illustrates method overriding. Class A3 is extended by Class B3. Each of these classes defines a hello(string s) method that outputs the string “A3: Hello From” 
or “B3: Hello From” respectively. Use the concept Dynamic Method Dispatch and keyword super

class  A3{
    void hello(String s)
    {
        System.out.println("A3 : Hello from "+ s);
    }
}

class B3 extends A3
{
    void hello(String s)
    {
        super.hello(s);
        System.out.println("B3 : Hello from "+ s);
    }
}


class p12 {
    public static void main(String []arg)
    {
        B3 supObj = new B3();
        supObj.hello("Hllo");
    }
    
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 13
//Write an abstract class shape, which defines abstract method area. Derive class circle from shape. It has data member radius and implementation for area function. Derive class Triangle 
//from shape. It has data members height, base and implementation for area function. Derive class Square from shape. It has data member side and implementation for area function. In 
//main class, use dynamic method dispatch in order to call correct version of method.

abstract class shape{
    abstract void area(); 
    void print()
    {
        System.out.println("gg");
    }
}

class circle extends shape
{
    double radius;
    circle(double x)
    {
        radius = x;
    }
    void area()
    {
        System.out.println("Area of Circle is : "+ 3.14*radius*radius);
    }
}
class Triangle extends shape
{
    double height,base;
    Triangle(double x,double y)
    {
        height = x;
        base = y;
    }
    void area()
    {
        System.out.println("Area of Triangle is : "+ 0.5*height*base);
    }
}

class Square extends shape
{
    double side;
    Square(double x)
    {
        side = x;
    }
    void area()
    {
        System.out.println("Area of Square is : "+ side*side);
    }
}


class p13
{
    public static void main(String [] arg)
    {
        shape x;
        circle a = new circle(7);
        Triangle b = new Triangle(12,6);
        Square c = new Square(52);
        x = a;
        x.area();
        x = b;
        x.area();
        x = c;
        x.area();
            
    }
}


//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 14
//Create an interface Shape2D which declares a getArea() method.. The abstract class Shape declares abstract display () method .Circle class is extended from shape class and implemented 
//from shape2D interface. Write appropriate method required in class circle and Create instance of circle object and display area of circle

interface Shape2D{
    void getArea();
}

abstract class Shape{
    abstract void display();
}

class circle extends Shape implements Shape2D
{
    double r,ar;
    circle(double x)
    {
        r = x;
    }
    public void getArea()
    {
        ar = (22/7)*r*r;
    }
    void display()
    {
        getArea();
        System.out.println("Area : "+ar);
    }
}
class p14 {
    public static void main(String [] args)
    {
        circle c1 = new circle(7);
        c1.display();
    }
    
}


//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 15
//Create a package “employee” and define a Class Employee having three data members, name, emp_num, and gender and two methods- input_data and show_data. Inherit class SalariedEmployee 
//from this class and keep it in package “employee”. Add new variable salary and methods allowance (if female hra=0.1* salary else 0.09* salary. DA= 0.05*salary) and increment 
//(salary= salary+0.01 * salary). Calculate gross salary in main class defined in the same package




//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 16
//WAP using try catch block. User should enter two command line arguments. If only one argument is entered then exception should be caught. In case of two command line arguments, 
//if fist is divided by second and if second commandline argument is 0 then catch the appropriate exception. 

class p16
{
    public static void main(String [] args)
    {
        if(args.length  == 1)
        {
            try
            {
                int x = 5/0;
            }
            catch(Exception e)
            {
                System.out.println("Error : only one input");
            }
        }
        else
        {
            try
            {
                int x = Integer.parseInt(args[0])/Integer.parseInt(args[1]);
                System.out.println(x);
            }
            catch(Exception e)
            {
                System.out.println("Error : Try again wrong input ");
            }
        }
    }
}


//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Practical 17

//Define an exception called “NoMatchException” that is thrown when a string is not equal to “India”. Write a program that uses this exception.

import java.util.*;

class NoMatchException extends Exception
{
    public NoMatchException(String str)
    {
        super(str);
    }
}


class p17 {
    static int check(String x)
    {
        int c = 0;
        char[]a = new char[x.length()];
        char[]b = {'I','n','d','i','a'};
        a = x.toCharArray();
        for(int i=0;i<5;i++)
        {
            if(a[i]!=b[i])
            {
                c =1;
            }
        }
        return c;

        
    }
    static void validate(int c)throws NoMatchException{
        if(c==1)
        {
            throw new NoMatchException("Out of Not from India");
        }
        else
        {
            System.out.println("Wellcom");
        }
    }
    public static void main(String [] arg)
    {
        Scanner sc =new Scanner(System.in);
        String x = sc.nextLine();
        try
        {
            validate(check(x));
        }
        catch(NoMatchException e)
        {
            System.out.println("Check your input\n");
            System.out.println("Exeption : "+e);
        }
        
    }    
}




//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// credits : Vedant Domadiya
